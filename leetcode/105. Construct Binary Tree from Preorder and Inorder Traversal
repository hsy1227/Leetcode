/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        return build(preorder,inorder,0,0,inorder.size()-1);
    }
    TreeNode* build(vector<int>& pre,vector<int>& in,int prestart,int instart,int inend){
        if(prestart>pre.size()-1 || instart>inend) return NULL;
        TreeNode* root = new TreeNode(pre[prestart]);
        int index=0;
        for(int i=instart;i<=inend;i++)
            if(root->val==in[i]) index=i;
        root->left=build(pre,in,prestart+1,instart,index-1);
        root->right=build(pre,in,prestart+index-instart+1,index+1,inend);
        return root;
    }
};
